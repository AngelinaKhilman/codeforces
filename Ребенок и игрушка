ограничение по времени на тест1 секунда
ограничение по памяти на тест256 мегабайт
вводстандартный ввод
выводстандартный вывод
В день детей ребенок получил в подарок от Delayyy игрушку. Но ребенок такой вредный, что он ждет — не дождется шанса сломать ее.

Игрушка состоит из n деталей, соединенных m веревочками. Каждая веревочка соединяет две детали, при этом каждая пара деталей соединена не более чем одной веревочкой. Чтобы разломать игрушку, ребенок должен оторвать все ее детали. Ребенок может отрывать по одной детали за раз, на каждое отрывание он тратит энергию. Обозначим значение энергии детали i как vi. Ребенок тратит vf1 + vf2 + ... + vfk энергии на отрывание детали i, где f1, f2, ..., fk — еще не оторванные детали, напрямую соединенные веревочками с i-й.

Помогите ребенку посчитать минимальную суммарную энергию, которую он должен потратить на отрывание всех n деталей.

Входные данные
В первой строке записано два целых числа, n и m (1 ≤ n ≤ 1000; 0 ≤ m ≤ 2000). Во второй строке записано n целых чисел: v1, v2, ..., vn (0 ≤ vi ≤ 105). Затем следует m строк, в каждой записано по два целых числа, xi и yi, обозначающих веревочку, соединяющую детали xi и yi (1 ≤ xi, yi ≤ n; xi ≠ yi).

Считайте, что все детали пронумерованы от 1 до n.

Выходные данные
Выведите минимальную суммарную энергию, необходимую для отрывания всех n деталей игрушки.


import math


def main():
    v = input().split()
    n = int(v[0])
    m = int(v[1])
    a = []
    a.append(0)
    summ = 0
    v = input().split()
    for i in range(n):
        a.append(int(v[i]))
    for i in range(m):
        v = input().split()
        q = min(a[int(v[0])], a[int(v[1])])
        summ += q

    print(summ)


if __name__ == "__main__":
    main()
