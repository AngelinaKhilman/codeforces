ограничение по времени на тест1 секунда
ограничение по памяти на тест256 мегабайт
вводстандартный ввод
выводстандартный вывод
Боб — пастух. Он пасет своих овец на большом пастбище. Недавно волки утащили нескольких из его овец. Поэтому он решил обзавестись несколькими собаками-пастухами, которые будут защищать всех его овец.

Пастбище можно представить как прямоугольник из R × C клеток. Каждая клетка либо пустая, либо содержит овцу, волка или собаку. Овцы и собаки не могут двигаться, однако волки могут перемещаться по пастбищу свободно, каждый раз перемещаясь влево, вправо, вверх или вниз в соседнюю клетку. Если волк доберется до клетки с овцой, он съест ее. Однако волк не может зайти в клетку, где находится собака.

Изначально собак нет. Расположите собак на пастбище так, чтобы никакой волк не мог бы добраться до никакой овцы, или определите, что это невозможно. Обратите внимание на то, что у вас достаточно собак, поэтому вам не нужно минимизировать их количество.

Входные данные
Первая строка содержит два целых числа R (1 ≤ R ≤ 500) и C (1 ≤ C ≤ 500) — число строк и число столбцов на пастбище, соответственно.

Каждая из следующих R строк содержит строку, состоящую из ровно C символов и описывающую одну строку пастбища. Здесь «S» означает клетку с овцой, «W» означает клетку с волком, а «.» означает пустую клетку.

Выходные данные
Если невозможно защитить всех овец, выведите одну строчку со словом «No».

Иначе выведите одну строку со словом «Yes». Затем выведите R строк, описывающих пастбище после того, как вы расставили собак. Как и во входных файлах, «S» означает клетку с овцой, «W» означает клетку с волком, «D» — собаку, а «.» — пустую клетку. Вы не можете перемещать, добавлять или удалять волков или овец.

Если существует несколько решений, выведите любое из них. Вам не обязательно минимизировать число собак.

def main():

    variables = input().split()
    n, k = int(variables[0]), int(variables[1])
    a = []
    for i in range(n):
        variables = str(input())
        b = []
        for j in range(k):
            b.append(str(variables[j]))
        a.append(b)
    flag = False
    for i in range(n):
        for j in range(k):
            if a[i][j] == "W":
                if i + 1 < n:
                    if a[i + 1][j] == "S":
                        flag = True
                if i - 1 >= 0:
                    if a[i - 1][j] == "S":
                        flag = True
                if j + 1 < k:
                    if a[i][j + 1] == "S":
                        flag = True
                if j - 1 >= 0:
                    if a[i][j - 1] == "S":
                        flag = True

    if flag:
        print("No")
    else:
        print("Yes")
        for i in range(n):
            q = ""
            for j in range(k):
                if a[i][j] == ".":
                    q += "D"
                else:
                    q += str(a[i][j])
            print(q)


if __name__ == "__main__":
    main()
